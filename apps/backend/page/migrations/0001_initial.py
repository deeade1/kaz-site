# Generated by Django 5.0.7 on 2024-12-09 19:48

import django.contrib.postgres.indexes
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import core.utils.editorjs
import core.utils.json_serializer


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("is_published", models.BooleanField(default=False)),
                (
                    "private_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                (
                    "seo_title",
                    models.CharField(
                        blank=True,
                        max_length=70,
                        null=True,
                        validators=[django.core.validators.MaxLengthValidator(70)],
                    ),
                ),
                (
                    "seo_description",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        null=True,
                        validators=[django.core.validators.MaxLengthValidator(300)],
                    ),
                ),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("title", models.CharField(max_length=250)),
                (
                    "content",
                    models.JSONField(
                        blank=True,
                        default=core.utils.editorjs.clean_editor_js,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                "ordering": ("slug",),
                "permissions": (("manage_pages", "Manage pages."),),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PageTranslation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("language_code", models.CharField(max_length=35)),
                (
                    "seo_title",
                    models.CharField(
                        blank=True,
                        max_length=70,
                        null=True,
                        validators=[django.core.validators.MaxLengthValidator(70)],
                    ),
                ),
                (
                    "seo_description",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        null=True,
                        validators=[django.core.validators.MaxLengthValidator(300)],
                    ),
                ),
                (
                    "slug",
                    models.SlugField(allow_unicode=True, max_length=255, null=True),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "content",
                    models.JSONField(
                        blank=True,
                        default=core.utils.editorjs.clean_editor_js,
                        null=True,
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="translations",
                        to="page.page",
                    ),
                ),
            ],
            options={
                "ordering": ("language_code", "page", "pk"),
            },
        ),
        migrations.CreateModel(
            name="PageType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "private_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        encoder=core.utils.json_serializer.CustomJsonEncoder,
                        null=True,
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                (
                    "slug",
                    models.SlugField(allow_unicode=True, max_length=255, unique=True),
                ),
            ],
            options={
                "ordering": ("slug",),
                "permissions": (
                    (
                        "manage_page_types_and_attributes",
                        "Manage page types and attributes.",
                    ),
                ),
                "abstract": False,
                "indexes": [
                    django.contrib.postgres.indexes.GinIndex(
                        fields=["name"],
                        name="pagetype_title_gin_idx",
                        opclasses=["gin_trgm_ops"],
                    ),
                    django.contrib.postgres.indexes.GinIndex(
                        fields=["slug"],
                        name="pagetype_slug_gin_idx",
                        opclasses=["gin_trgm_ops"],
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="page",
            name="page_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="pages",
                to="page.pagetype",
            ),
        ),
        migrations.AddConstraint(
            model_name="pagetranslation",
            constraint=models.UniqueConstraint(
                fields=("language_code", "slug"), name="uniq_lang_slug_pagetransl"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="pagetranslation",
            unique_together={("language_code", "page")},
        ),
        migrations.AddIndex(
            model_name="page",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["private_metadata"], name="page_p_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="page",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["metadata"], name="page_meta_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="page",
            index=django.contrib.postgres.indexes.BTreeIndex(
                fields=["title"], name="title_btree_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="page",
            index=django.contrib.postgres.indexes.BTreeIndex(
                fields=["slug"], name="slug_btree_idx"
            ),
        ),
    ]
